# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches:
      - main
      - devel

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push dev
        id: docker_build_dev
        uses: docker/build-push-action@v2
        with:
          push: true
          target: opencv-2.4-devel
          tags: plucio/opencv:2.4.13.7.3-jammy-dev,plucio/opencv:2.4.13-jammy-dev,plucio/opencv:2.4-jammy-dev
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline
      -
        name: Build and push runtime
        id: docker_build_runtime
        uses: docker/build-push-action@v2
        with:
          push: true
          target: opencv-2.4-runtime
          tags: plucio/opencv:2.4.13.7.3-jammy-runtime,plucio/opencv:2.4.13-jammy-runtime,plucio/opencv:2.4-jammy-runtime
          platforms: linux/amd64,linux/arm64
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline
